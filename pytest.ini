[pytest]
addopts =
    # show summary of all tests that did not pass
    -rEfX
    # Make tracebacks shorter
    --tb=native
    # capture only Python print and C++ py::print, but not C output (low-level Python errors)
    --capture=sys
    # don't suppress warnings, but don't shove them all to the end either
    -p no:warnings
    # Ignore backends/arm tests you need to run examples/arm/setup.sh to install some tool to make them work
    # For GitHub testing this is setup/executed in the unittest-arm job see .github/workflows/pull.yml for more info.
    --ignore-glob=backends/arm/**/*
    # explicitly list out tests that are running successfully in oss
    examples/portable/test
    # sdk/
    sdk/
    # examples
    examples/models/llama2/tests
    # exir
    exir/_serialize/test
    exir/backend/test
    exir/dialects/backend/test
    exir/dialects/edge/test
    exir/dialects/test
    exir/emit/test
    exir/program/test
    exir/tests/
    # kernels/
    kernels/prim_ops/test
    kernels/test/test_case_gen.py
    # backends/xnnpack
    backends/xnnpack/test
    # extension/
    extension/pybindings/test
    # test
    test/end2end/test_end2end.py
    --ignore=backends/xnnpack/test/ops/linear.py
    --ignore=backends/xnnpack/test/models/llama2_et_example.py
    --ignore=exir/backend/test/demos
    --ignore=exir/backend/test/test_backends.py
    --ignore=exir/backend/test/test_backends_lifted.py
    --ignore=exir/backend/test/test_lowered_backend_module.py
    --ignore=exir/backend/test/test_partitioner.py
    --ignore=exir/tests/test_common.py
    --ignore=exir/tests/test_memory_format_ops_pass_aten.py
    --ignore=exir/tests/test_memory_planning.py
    --ignore=exir/tests/test_op_convert.py
    --ignore=exir/tests/test_passes.py
    --ignore=exir/tests/test_quant_fusion_pass.py
    --ignore=exir/tests/test_quantization.py
    --ignore=exir/tests/test_verification.py

# run the same tests multiple times to determine their
# flakiness status. Default to 50 re-runs
flake-finder = true
flake-runs = 50
