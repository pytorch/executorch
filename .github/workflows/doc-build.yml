name: Build documentation

on:
  pull_request:
  push:
    branches:
      - main
      - release/*
    tags:
      - v[0-9]+.[0-9]+.[0-9]
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      job-name: Build doc
      runner: linux.2xlarge
      docker-image: executorch-ubuntu-22.04-clang12
      submodules: 'true'
      repository: pytorch/executorch
      upload-artifact: docs
      script: |
        # The generic Linux job chooses to use base env, not the one setup by the image
        CONDA_ENV=$(conda env list --json | jq -r ".envs | .[-1]")
        conda activate "${CONDA_ENV}"

        source .ci/scripts/utils.sh
        # This is a simple Python script but as it tries to import executorch.examples.models,
        # it requires a whole bunch of Executorch dependencies on the Docker image
        install_executorch

        if [[(${GITHUB_EVENT_NAME} = 'pull_request' && (${GITHUB_BASE_REF} = 'release'*)) || (${GITHUB_REF} = 'refs/heads/release'*) ]]; then
          export CHANNEL=test
        else
          export CHANNEL=nightly
        fi

        set -eux

        # Build docset:
        cd docs
        make html
        cd ..

        cp -rf docs/_build/html/* "${RUNNER_DOCS_DIR}"

        # Sometimes the artifact directory already contains an "html" subdir.
        rm -rf "${RUNNER_ARTIFACT_DIR}/html"
        mv docs/_build/html "${RUNNER_ARTIFACT_DIR}"

# Enable preview later. Previews are available publicly
#
# upload-preview:
#    if: github.repository == 'pytorch/executorch' && github.event_name == 'push' &&
#        (github.ref_type == 'branch' && github.ref_name == 'main')
#    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main

  upload-gh-pages:
    if: ${{ (github.repository == 'pytorch/executorch') && (github.ref_name == 'main') }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages
    - uses: actions/download-artifact@v3
      with:
        name: docs
    - name: Upload docs
      run: |

        set -x
        git config user.name 'pytorchbot'
        git config user.email 'soumith+bot@pytorch.org'
        rm -rf main
        mv html main
        git add --all main || true
        git commit -m "Auto-generating sphinx docs" || true
        git push -f
