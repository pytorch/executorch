/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

#ifndef LINEAR_INT4_WEIGHT_TILE_LOAD_GLSLH
#define LINEAR_INT4_WEIGHT_TILE_LOAD_GLSLH

/*
 * Assumes the following variables are declared in shader layout:
 * - t_packed_int4_weight
 *
 * Macro Settings:
 * - WEIGHT_BUFFER
 */

#extension GL_EXT_control_flow_attributes : require

#include "linear_int4_weight_tile.glslh"

ivec4 load_int4_weight_block(
    const int block_x,
    const int block_y,
    const int nblocks_x) {
#ifdef WEIGHT_BUFFER
  return t_packed_int4_weight[(block_y * nblocks_x) + block_x];
#else
  return texelFetch(t_packed_int4_weight, ivec2(block_x, block_y), 0);
#endif
}

void load_int4_weight_tile(
    out Int4WeightTile weight_tile,
    const int block_x,
    const int block_y,
    const int nblocks_x) {
  [[unroll]] for (int y = 0; y < TILE_K4; ++y) {
    [[unroll]] for (int x = 0; x < TILE_N8; ++x) {
      weight_tile.data[y][x] =
          load_int4_weight_block(block_x + x, block_y + y, nblocks_x);
    }
  }
}

#endif // LINEAR_INT4_WEIGHT_TILE_LOAD_GLSLH
