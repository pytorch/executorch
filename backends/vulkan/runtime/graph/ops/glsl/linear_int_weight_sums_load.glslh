/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

#ifndef LINEAR_FP_WEIGHT_SUMS_LOAD_GLSLH
#define LINEAR_FP_WEIGHT_SUMS_LOAD_GLSLH

#include "linear_int_per_out_channel_params.glslh"

ivec4 load_weight_sum_x4(const int n4) {
  return ivec4(t_weight_sums[n4]);
}

void load_weight_sums_tile(
    out IntPerOutChannelParams sums,
    const int n4_start) {
#if TILE_N4 == 1
  sums.data[0] = load_weight_sum_x4(n4_start);

#else
  [[unroll]] for (int n4 = 0; n4 < TILE_N4; ++n4) {
    sums.data[n4] = load_weight_sum_x4(n4_start + n4);
  }

#endif
}

#endif // LINEAR_FP_WEIGHT_SUMS_LOAD_GLSLH
