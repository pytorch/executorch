/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

#ifndef SLICE_GLSLH
#define SLICE_GLSLH

/**
 * Enable the fast path if a texel loaded from the input texture can be used as
 * is to store to the output texture. The following conditions must be met:
 *
 * 1. The input and output textures have the same packed dimension.
 * 2. The select_dim must not be the packed dimension of the input.
 */
bool can_use_fast_path() {
  if (out_packed_dim != in_packed_dim) {
    return false;
  }
  if (in_packed_dim == selected_dim) {
    return false;
  }
  return true;
}

/*
 * Converts output tensor indices to input tensor indices for the slice operation.
 * This function maps the output indices to the corresponding input indices based on
 * the slice parameters (start, step, selected_dim).
 *
 * Parameters assumed to be defined in the layout specifier:
 * - in_sizes
 * - selected_dim
 * - start
 * - step
 */
ivec4 out_tidx_to_in_tidx(const ivec4 out_tidx) {
  ivec4 in_tidx = out_tidx;

  int adjusted_start = start;
  if (start < 0) {
    adjusted_start = start + in_sizes[selected_dim];
  }

  in_tidx[selected_dim] = adjusted_start + out_tidx[selected_dim] * step;

  return in_tidx;
}

#endif // SLICE_GLSLH
