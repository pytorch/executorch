load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")
load("@fbcode_macros//build_defs:export_files.bzl", "export_file")
load("@fbcode_macros//build_defs:native_rules.bzl", "buck_genrule")

export_file(
    name = "vk_schema_file",
    src = "schema.fbs",
    visibility = ["//executorch/backends/vulkan/..."],
)

buck_genrule(
    name = "gen_vk_delegate_schema",
    srcs = [
        "schema.fbs",
    ],
    # We're only generating a single file, so it seems like we could use
    # `out`, but `flatc` takes a directory as a parameter, not a single
    # file. Use `outs` so that `${OUT}` is expanded as the containing
    # directory instead of the file itself.
    outs = {
        "schema_generated.h": ["schema_generated.h"],
    },
    cmd = " ".join([
        "$(exe fbsource//third-party/flatbuffers/fbsource_namespace:flatc)",
        "--cpp",
        "--cpp-std c++11",
        "--scoped-enums",
        "-o ${OUT}",
        "${SRCS}",
    ]),
    default_outs = ["."],
    visibility = ["//executorch/backends/vulkan/serialization/schema:vk_delegate_schema"],
)

cpp_library(
    name = "vk_delegate_schema",
    headers = {
        "schema_generated.h": ":gen_vk_delegate_schema[schema_generated.h]",
    },
    exported_deps = [
        "fbsource//third-party/flatbuffers/fbsource_namespace:flatbuffers-api",  # @manual: Generated header file includes "flatbuffers_fbsource/flatbuffers.h"
    ],
)
