# Copyright (c) Qualcomm Innovation Center, Inc.
# All rights reserved
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

from enum import Enum

QNN_OP_PACKAGE_NAME_QTI_AISW = "qti.aisw"

QNN_OP_TRANSPOSE = "Transpose"
QNN_OP_TRANSPOSE_PARAM_PERM = "perm"

QNN_OP_CONV_2D = "Conv2d"
QNN_OP_CONV_2D_PARAM_STRIDE = "stride"
QNN_OP_CONV_2D_PARAM_PAD_AMOUNT = "pad_amount"
QNN_OP_CONV_2D_PARAM_GROUP = "group"
QNN_OP_CONV_2D_PARAM_DILATION = "dilation"

QNN_OP_DEPTH_WISE_CONV_2D = "DepthWiseConv2d"
QNN_OP_DEPTH_WISE_CONV_2D_PARAM_STRIDE = "stride"
QNN_OP_DEPTH_WISE_CONV_2D_PARAM_PAD_AMOUNT = "pad_amount"
QNN_OP_DEPTH_WISE_CONV_2D_PARAM_DILATION = "dilation"

QNN_OP_ELEMENTWISE_ADD = "ElementWiseAdd"

QNN_OP_RELU = "Relu"

QNN_OP_RELU_MIN_MAX = "ReluMinMax"
QNN_OP_RELU_MIN_MAX_PARAM_MIN_VALUE = "min_value"
QNN_OP_RELU_MIN_MAX_PARAM_MAX_VALUE = "max_value"

QNN_OP_REDUCE_MEAN = "ReduceMean"
QNN_OP_REDUCE_MEAN_PARAM_AXES = "axes"
QNN_OP_REDUCE_MEAN_PARAM_KEEP_DIMS = "keep_dims"

QNN_OP_FULLY_CONNECTED = "FullyConnected"
QNN_OP_FULLY_CONNECTED_PARAM_KEEP_DIMS = "keep_dims"

QNN_OP_BATCHNORM = "Batchnorm"

QNN_OP_RESHAPE = "Reshape"

QNN_OP_STRIDED_SLICE = "StridedSlice"
QNN_OP_STRIDED_SLICE_PARAM_RANGES = "ranges"
QNN_OP_STRIDED_SLICE_PARAM_BEGIN_MASK = "begin_mask"
QNN_OP_STRIDED_SLICE_PARAM_END_MASK = "end_mask"
QNN_OP_STRIDED_SLICE_PARAM_SHRINK_AXES = "shrink_axes"
QNN_OP_STRIDED_SLICE_PARAM_NEW_AXES_MASK = "new_axes_mask"

QNN_OP_EXPAND_DIMS = "ExpandDims"
QNN_OP_EXPAND_DIMS_PARAM_AXIS = "axis"

QNN_OP_ELEMENT_WISE_MULTIPLY = "ElementWiseMultiply"

QNN_OP_CONCAT = "Concat"
QNN_OP_CONCAT_PARAM_AXIS = "axis"

QNN_OP_POOL_MAX_2D = "PoolMax2d"
QNN_OP_POOL_MAX_2D_PARAM_FILTER_SIZE = "filter_size"
QNN_OP_POOL_MAX_2D_PARAM_STRIDE = "stride"
QNN_OP_POOL_MAX_2D_PARAM_PAD_AMOUNT = "pad_amount"
QNN_OP_POOL_MAX_2D_PARAM_ROUNDING_MODE = "rounding_mode"
QNN_OP_POOL_MAX_2D_ROUNDING_MODE_FLOOR = 0
QNN_OP_POOL_MAX_2D_ROUNDING_MODE_CEIL = 1

QNN_OP_QUANTIZE = "Quantize"
QNN_OP_DEQUANTIZE = "Dequantize"

QNN_OP_CAST = "Cast"

QNN_OP_ELEMENT_WISE_SUBTRACT = "ElementWiseSubtract"

QNN_OP_ELEMENT_WISE_CEIL = "ElementWiseCeil"

QNN_OP_POOL_AVG_2D = "PoolAvg2d"
QNN_OP_POOL_AVG_2D_PARAM_FILTER_SIZE = "filter_size"
QNN_OP_POOL_AVG_2D_PARAM_STRIDE = "stride"
QNN_OP_POOL_AVG_2D_PARAM_PAD_AMOUNT = "pad_amount"
QNN_OP_POOL_AVG_2D_PARAM_COUNT_PAD_FOR_EDGES = "count_pad_for_edges"
QNN_OP_POOL_AVG_2D_PARAM_ROUNDING_MODE = "rounding_mode"
QNN_OP_POOL_AVG_2D_ROUNDING_MODE_FLOOR = 0
QNN_OP_POOL_AVG_2D_ROUNDING_MODE_CEIL = 1

QNN_OP_RESIZE_BILINEAR = "ResizeBilinear"
QNN_OP_RESIZE_BILINEAR_ALIGN_CORNERS = "align_corners"
QNN_OP_RESIZE_BILINEAR_HALF_PIXEL_CENTERS = "half_pixel_centers"

QNN_OP_ELEMENT_WISE_DIVIDE = "ElementWiseDivide"

QNN_OP_SOFTMAX = "Softmax"
QNN_OP_SOFTMAX_PARAM_AXIS = "axis"
QNN_OP_SOFTMAX_PARAM_BETA = "beta"

QNN_OP_PAD = "Pad"
QNN_OP_PAD_PARAM_SCHEME = "scheme"
QNN_OP_PAD_SCHEME_CONSTANT = 0
QNN_OP_PAD_SCHEME_MIRROR_SYMMETRIC = 1
QNN_OP_PAD_SCHEME_MIRROR_REFLECT = 2
QNN_OP_PAD_SCHEME_EDGE = 3
QNN_OP_PAD_PARAM_PAD_AMOUNT = "pad_amount"
QNN_OP_PAD_PARAM_PAD_CONSTANT_VALUE = "pad_constant_value"

QNN_OP_MAT_MUL = "MatMul"
QNN_OP_MAT_MUL_PARAM_TRANSPOSE_IN0 = "transpose_in0"
QNN_OP_MAT_MUL_PARAM_TRANSPOSE_IN1 = "transpose_in1"

QNN_OP_GATHER = "Gather"
QNN_OP_GATHER_PARAM_AXIS = "axis"

QNN_OP_TILE = "Tile"
QNN_OP_TILE_PARAM_MULTIPLES = "multiples"

QNN_OP_HARD_SWISH = "HardSwish"

QNN_OP_DEPTH_TO_SPACE = "DepthToSpace"
QNN_OP_DEPTH_TO_SPACE_PARAM_BLOCK_SIZE = "block_size"
QNN_OP_DEPTH_TO_SPACE_PARAM_MODE = "mode"
QNN_OP_DEPTH_TO_SPACE_MODE_DCR = 0
QNN_OP_DEPTH_TO_SPACE_MODE_CRD = 1

QNN_OP_TANH = "Tanh"

QNN_OP_ELEMENTWISE_NEURON = "ElementWiseNeuron"
QNN_OP_ELEMENT_WISE_RULES_OPERATION = "operation"
QNN_OP_ELEMENT_WISE_RULES_ALPHA = "alpha"
QNN_OP_ELEMENT_WISE_RULES_BETA = "beta"

class ElementwiseNeuronOperation(Enum):
    ELU = 0
    GELU = 1
    HARD_SIGMOID = 2
    HARD_SWISH = 3
    RELU = 4
    RELU_MIN_MAX = 5
    SIGMOID = 6
    SOFTPLUS = 7
    TANH = 8
