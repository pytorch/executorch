# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class StablehloCustomCallOptions(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StablehloCustomCallOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStablehloCustomCallOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    @classmethod
    def StablehloCustomCallOptionsBufferHasIdentifier(
        cls, buf, offset, size_prefixed=False
    ):
        return flatbuffers.util.BufferHasIdentifier(
            buf, offset, b"\x54\x46\x4C\x33", size_prefixed=size_prefixed
        )

    # StablehloCustomCallOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StablehloCustomCallOptions
    def CallTargetName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StablehloCustomCallOptions
    def HasSideEffect(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(
                self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
            )
        return False

    # StablehloCustomCallOptions
    def BackendConfig(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StablehloCustomCallOptions
    def ApiVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StablehloCustomCallOptions
    def CalledComputations(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(
                flatbuffers.number_types.Int32Flags,
                a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4),
            )
        return 0

    # StablehloCustomCallOptions
    def CalledComputationsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # StablehloCustomCallOptions
    def CalledComputationsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StablehloCustomCallOptions
    def CalledComputationsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # StablehloCustomCallOptions
    def CustomAttributes(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(
                flatbuffers.number_types.Uint8Flags,
                a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1),
            )
        return 0

    # StablehloCustomCallOptions
    def CustomAttributesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # StablehloCustomCallOptions
    def CustomAttributesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StablehloCustomCallOptions
    def CustomAttributesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0


def StablehloCustomCallOptionsStart(builder):
    builder.StartObject(6)


def Start(builder):
    StablehloCustomCallOptionsStart(builder)


def StablehloCustomCallOptionsAddCallTargetName(builder, callTargetName):
    builder.PrependUOffsetTRelativeSlot(
        0, flatbuffers.number_types.UOffsetTFlags.py_type(callTargetName), 0
    )


def AddCallTargetName(builder, callTargetName):
    StablehloCustomCallOptionsAddCallTargetName(builder, callTargetName)


def StablehloCustomCallOptionsAddHasSideEffect(builder, hasSideEffect):
    builder.PrependBoolSlot(1, hasSideEffect, 0)


def AddHasSideEffect(builder, hasSideEffect):
    StablehloCustomCallOptionsAddHasSideEffect(builder, hasSideEffect)


def StablehloCustomCallOptionsAddBackendConfig(builder, backendConfig):
    builder.PrependUOffsetTRelativeSlot(
        2, flatbuffers.number_types.UOffsetTFlags.py_type(backendConfig), 0
    )


def AddBackendConfig(builder, backendConfig):
    StablehloCustomCallOptionsAddBackendConfig(builder, backendConfig)


def StablehloCustomCallOptionsAddApiVersion(builder, apiVersion):
    builder.PrependInt32Slot(3, apiVersion, 0)


def AddApiVersion(builder, apiVersion):
    StablehloCustomCallOptionsAddApiVersion(builder, apiVersion)


def StablehloCustomCallOptionsAddCalledComputations(builder, calledComputations):
    builder.PrependUOffsetTRelativeSlot(
        4, flatbuffers.number_types.UOffsetTFlags.py_type(calledComputations), 0
    )


def AddCalledComputations(builder, calledComputations):
    StablehloCustomCallOptionsAddCalledComputations(builder, calledComputations)


def StablehloCustomCallOptionsStartCalledComputationsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)


def StartCalledComputationsVector(builder, numElems: int) -> int:
    return StablehloCustomCallOptionsStartCalledComputationsVector(builder, numElems)


def StablehloCustomCallOptionsAddCustomAttributes(builder, customAttributes):
    builder.PrependUOffsetTRelativeSlot(
        5, flatbuffers.number_types.UOffsetTFlags.py_type(customAttributes), 0
    )


def AddCustomAttributes(builder, customAttributes):
    StablehloCustomCallOptionsAddCustomAttributes(builder, customAttributes)


def StablehloCustomCallOptionsStartCustomAttributesVector(builder, numElems):
    return builder.StartVector(1, numElems, 1)


def StartCustomAttributesVector(builder, numElems: int) -> int:
    return StablehloCustomCallOptionsStartCustomAttributesVector(builder, numElems)


def StablehloCustomCallOptionsEnd(builder):
    return builder.EndObject()


def End(builder):
    return StablehloCustomCallOptionsEnd(builder)
