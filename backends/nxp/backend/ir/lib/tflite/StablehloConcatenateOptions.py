# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class StablehloConcatenateOptions(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StablehloConcatenateOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStablehloConcatenateOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    @classmethod
    def StablehloConcatenateOptionsBufferHasIdentifier(
        cls, buf, offset, size_prefixed=False
    ):
        return flatbuffers.util.BufferHasIdentifier(
            buf, offset, b"\x54\x46\x4C\x33", size_prefixed=size_prefixed
        )

    # StablehloConcatenateOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StablehloConcatenateOptions
    def Dimension(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0


def StablehloConcatenateOptionsStart(builder):
    builder.StartObject(1)


def Start(builder):
    StablehloConcatenateOptionsStart(builder)


def StablehloConcatenateOptionsAddDimension(builder, dimension):
    builder.PrependInt64Slot(0, dimension, 0)


def AddDimension(builder, dimension):
    StablehloConcatenateOptionsAddDimension(builder, dimension)


def StablehloConcatenateOptionsEnd(builder):
    return builder.EndObject()


def End(builder):
    return StablehloConcatenateOptionsEnd(builder)
